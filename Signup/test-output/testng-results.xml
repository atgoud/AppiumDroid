<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="135" failed="0" total="135" passed="0">
  <reporter-output>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
    <line>
      <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
    </line>
  </reporter-output>
  <suite name="suite" duration-ms="1466" started-at="2014-09-10T08:30:56Z" finished-at="2014-09-10T08:30:58Z">
    <groups>
    </groups>
    <test name="Create_New_Account" duration-ms="652" started-at="2014-09-10T08:30:56Z" finished-at="2014-09-10T08:30:57Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="fetchSuiteConfiguration" is-config="true" duration-ms="9" started-at="2014-09-10T14:00:56Z" finished-at="2014-09-10T14:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@636942]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:56Z" finished-at="2014-09-10T14:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.click_joinnow_button()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="click_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="click_joinnow_button" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- click_joinnow_button -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="9" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_joinnow_button status=SKIP method=CreateNewAccount.click_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="cookiepolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="cookiepolicy_link" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- cookiepolicy_link -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cookiepolicy_link status=SKIP method=CreateNewAccount.cookiepolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalidFirstname" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalidFirstname" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ Rahul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalidFirstname" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[R@hu!_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalidFirstname" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rah Ul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalidLastName" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalidLastName" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ Rahul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalidLastName" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[R@hu!_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalidLastName" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rah Ul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ rahul.pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pndya@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandyamailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya00@@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul..pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@-mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#$%^%^&%#^&*@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rahul Pandya <rahul.pandya@mailinator.com>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya00@mailinator.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@web.net]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@111.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@mailinator.com (Rahul Pandya)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@mailinatorhotmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@xyz.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[pandya.rahul00@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jammmiieee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emailid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_password" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_password" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ra12@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[37]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahulpa12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[38]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="onclick_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="onclick_functionality" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- onclick_functionality -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=onclick_functionality status=SKIP method=CreateNewAccount.onclick_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="privacypolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="privacypolicy_link" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- privacypolicy_link -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=privacypolicy_link status=SKIP method=CreateNewAccount.privacypolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="register_success()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="register_success" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- register_success -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_success status=SKIP method=CreateNewAccount.register_success()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="tab_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tab_functionality" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- tab_functionality -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tab_functionality status=SKIP method=CreateNewAccount.tab_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="textbox_edit()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="textbox_edit" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- textbox_edit -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=textbox_edit status=SKIP method=CreateNewAccount.textbox_edit()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=useragreement_link status=SKIP method=CreateNewAccount.useragreement_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="useragreement_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="useragreement_link" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- useragreement_link -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="verify_joinnow_button" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_joinnow_button -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_joinnow_button status=SKIP method=CreateNewAccount.verify_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_labels_onpage()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="verify_labels_onpage" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_labels_onpage -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_labels_onpage status=SKIP method=CreateNewAccount.verify_labels_onpage()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="verify_mendatory_fields()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="verify_mendatory_fields" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_mendatory_fields -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_mendatory_fields status=SKIP method=CreateNewAccount.verify_mendatory_fields()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_register_page status=SKIP method=CreateNewAccount.verify_register_page()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="verify_register_page()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="verify_register_page" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_register_page -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_validation_msg()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="verify_validation_msg" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_validation_msg -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_validation_msg status=SKIP method=CreateNewAccount.verify_validation_msg()[pri:0, instance:com.linkedin.cases.CreateNewAccount@b7ec3a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Create_New_Account -->
    <test name="Verify_Register_Page" duration-ms="18" started-at="2014-09-10T08:30:57Z" finished-at="2014-09-10T08:30:57Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@161e946]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@eaaa96]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@161e946]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.verify_register_page()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_register_page()[pri:0, instance:com.linkedin.cases.CreateNewAccount@161e946]" name="verify_register_page" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_register_page -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@161e946]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_register_page status=SKIP method=CreateNewAccount.verify_register_page()[pri:0, instance:com.linkedin.cases.CreateNewAccount@161e946] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Verify_Register_Page -->
    <test name="Verify_Label_onPage" duration-ms="18" started-at="2014-09-10T08:30:57Z" finished-at="2014-09-10T08:30:57Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@d0a64a]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@659bde]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@d0a64a]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.verify_labels_onpage()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_labels_onpage()[pri:0, instance:com.linkedin.cases.CreateNewAccount@d0a64a]" name="verify_labels_onpage" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_labels_onpage -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@d0a64a]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_labels_onpage status=SKIP method=CreateNewAccount.verify_labels_onpage()[pri:0, instance:com.linkedin.cases.CreateNewAccount@d0a64a] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Verify_Label_onPage -->
    <test name="Verify_Mendatory_Fields" duration-ms="16" started-at="2014-09-10T08:30:57Z" finished-at="2014-09-10T08:30:57Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@ee7cee]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@dc488c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@ee7cee]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.verify_mendatory_fields()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_mendatory_fields()[pri:0, instance:com.linkedin.cases.CreateNewAccount@ee7cee]" name="verify_mendatory_fields" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_mendatory_fields -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@ee7cee]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_mendatory_fields status=SKIP method=CreateNewAccount.verify_mendatory_fields()[pri:0, instance:com.linkedin.cases.CreateNewAccount@ee7cee] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Verify_Mendatory_Fields -->
    <test name="Verify_Button_Functionality" duration-ms="19" started-at="2014-09-10T08:30:57Z" finished-at="2014-09-10T08:30:57Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@190d0d2]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1ee3df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@190d0d2]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.verify_joinnow_button()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@190d0d2]" name="verify_joinnow_button" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_joinnow_button -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@190d0d2]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_joinnow_button status=SKIP method=CreateNewAccount.verify_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@190d0d2] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Verify_Button_Functionality -->
    <test name="Click_Button_Functionality" duration-ms="18" started-at="2014-09-10T08:30:57Z" finished-at="2014-09-10T08:30:57Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@d1817d]" name="fetchSuiteConfiguration" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2613b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@d1817d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.click_joinnow_button()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="click_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@d1817d]" name="click_joinnow_button" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- click_joinnow_button -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@d1817d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_joinnow_button status=SKIP method=CreateNewAccount.click_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@d1817d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Click_Button_Functionality -->
    <test name="Textbox_Edit_Functionality" duration-ms="16" started-at="2014-09-10T08:30:57Z" finished-at="2014-09-10T08:30:57Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@17cc01d]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3d7bfb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@17cc01d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.textbox_edit()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="textbox_edit()[pri:0, instance:com.linkedin.cases.CreateNewAccount@17cc01d]" name="textbox_edit" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- textbox_edit -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@17cc01d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=textbox_edit status=SKIP method=CreateNewAccount.textbox_edit()[pri:0, instance:com.linkedin.cases.CreateNewAccount@17cc01d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Textbox_Edit_Functionality -->
    <test name="FirstName_FirstSpace" duration-ms="22" started-at="2014-09-10T08:30:57Z" finished-at="2014-09-10T08:30:57Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@96d02d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.invalidFirstname(java.lang.String,int)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="invalidFirstname" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="invalidFirstname" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ Rahul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="invalidFirstname" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[R@hu!_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="invalidFirstname" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rah Ul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@159d796] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- FirstName_FirstSpace -->
    <test name="FirstName_SpecChar" duration-ms="95" started-at="2014-09-10T08:30:57Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@13d62aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.click_joinnow_button()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="click_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="click_joinnow_button" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- click_joinnow_button -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_joinnow_button status=SKIP method=CreateNewAccount.click_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="cookiepolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="cookiepolicy_link" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- cookiepolicy_link -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cookiepolicy_link status=SKIP method=CreateNewAccount.cookiepolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalidFirstname" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalidFirstname" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ Rahul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalidFirstname" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[R@hu!_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalidFirstname" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rah Ul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidFirstname -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidFirstname status=SKIP method=CreateNewAccount.invalidFirstname(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalidLastName" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalidLastName" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ Rahul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalidLastName" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[R@hu!_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalidLastName" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rah Ul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ rahul.pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pndya@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandyamailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="9" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya00@@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul..pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@-mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#$%^%^&%#^&*@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rahul Pandya <rahul.pandya@mailinator.com>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya00@mailinator.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@web.net]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@111.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@mailinator.com (Rahul Pandya)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@mailinatorhotmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@xyz.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[pandya.rahul00@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:57Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jammmiieee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_password" duration-ms="1" started-at="2014-09-10T14:00:57Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:57Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emailid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ra12@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[37]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahulpa12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[38]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="onclick_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="onclick_functionality" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- onclick_functionality -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=onclick_functionality status=SKIP method=CreateNewAccount.onclick_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=privacypolicy_link status=SKIP method=CreateNewAccount.privacypolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="privacypolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="privacypolicy_link" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- privacypolicy_link -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="register_success()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="register_success" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- register_success -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_success status=SKIP method=CreateNewAccount.register_success()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tab_functionality status=SKIP method=CreateNewAccount.tab_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="tab_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tab_functionality" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- tab_functionality -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="textbox_edit()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="textbox_edit" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- textbox_edit -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=textbox_edit status=SKIP method=CreateNewAccount.textbox_edit()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="useragreement_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="useragreement_link" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- useragreement_link -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=useragreement_link status=SKIP method=CreateNewAccount.useragreement_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="verify_joinnow_button" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_joinnow_button -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_joinnow_button status=SKIP method=CreateNewAccount.verify_joinnow_button()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_labels_onpage()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="verify_labels_onpage" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_labels_onpage -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_labels_onpage status=SKIP method=CreateNewAccount.verify_labels_onpage()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="verify_mendatory_fields()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="verify_mendatory_fields" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_mendatory_fields -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_mendatory_fields status=SKIP method=CreateNewAccount.verify_mendatory_fields()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_register_page()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="verify_register_page" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_register_page -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_register_page status=SKIP method=CreateNewAccount.verify_register_page()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_validation_msg()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="verify_validation_msg" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_validation_msg -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_validation_msg status=SKIP method=CreateNewAccount.verify_validation_msg()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1be469] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- FirstName_SpecChar -->
    <test name="LastName_FirstSpace" duration-ms="20" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1188eb7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.invalidLastName(java.lang.String,int)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="invalidLastName" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="invalidLastName" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ Rahul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="invalidLastName" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[R@hu!_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="invalidLastName" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidlnames" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rah Ul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLastName status=SKIP method=CreateNewAccount.invalidLastName(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@803f84] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- LastName_FirstSpace -->
    <test name="Invalid_Emailid" duration-ms="70" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1419404]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.invalid_emailid(java.lang.String,int)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ rahul.pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="2" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pndya@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="3" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="5" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandyamailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya00@@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul..pandya@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@-mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="3" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#$%^%^&%#^&*@mailinator.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rahul Pandya <rahul.pandya@mailinator.com>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="2" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya00@mailinator.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@web.net]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@111.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="2" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@mailinator.com (Rahul Pandya)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@mailinatorhotmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="1" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahul.pandya@xyz.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="invalid_emailid" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidmailid" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[pandya.rahul00@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_emailid -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_emailid status=SKIP method=CreateNewAccount.invalid_emailid(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@e03a4d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Invalid_Emailid -->
    <test name="Invalid_Password" duration-ms="29" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5cc270]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.invalid_password(java.lang.String,int)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jammmiieee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[emailid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ra12@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[37]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="SKIP" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="invalid_password" duration-ms="0" started-at="2014-09-10T14:00:58Z" data-provider="invalidpassword" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahulpa12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[38]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalid_password -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalid_password status=SKIP method=CreateNewAccount.invalid_password(java.lang.String, int)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c9aa93] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Invalid_Password -->
    <test name="Register_Success" duration-ms="15" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@506147]" name="fetchSuiteConfiguration" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1e186d9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@506147]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.register_success()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="register_success()[pri:0, instance:com.linkedin.cases.CreateNewAccount@506147]" name="register_success" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- register_success -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@506147]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=register_success status=SKIP method=CreateNewAccount.register_success()[pri:0, instance:com.linkedin.cases.CreateNewAccount@506147] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Register_Success -->
    <test name="Tab_Functionality" duration-ms="19" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c235e1]" name="fetchSuiteConfiguration" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@15c2817]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c235e1]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.tab_functionality()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@c235e1]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tab_functionality status=SKIP method=CreateNewAccount.tab_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@c235e1] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="tab_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@c235e1]" name="tab_functionality" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- tab_functionality -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Tab_Functionality -->
    <test name="Onclick_Functionality" duration-ms="19" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@431753]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14c1752]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@431753]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.onclick_functionality()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="onclick_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@431753]" name="onclick_functionality" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- onclick_functionality -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@431753]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=onclick_functionality status=SKIP method=CreateNewAccount.onclick_functionality()[pri:0, instance:com.linkedin.cases.CreateNewAccount@431753] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Onclick_Functionality -->
    <test name="Verify_Validation_Msg" duration-ms="16" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1394e9d]" name="fetchSuiteConfiguration" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@8f1577]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1394e9d]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.verify_validation_msg()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="verify_validation_msg()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1394e9d]" name="verify_validation_msg" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_validation_msg -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1394e9d]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_validation_msg status=SKIP method=CreateNewAccount.verify_validation_msg()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1394e9d] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Verify_Validation_Msg -->
    <test name="User_Agreement_Link" duration-ms="17" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1d612fc]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.useragreement_link()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1d612fc]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1ca61f9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="SKIP" signature="useragreement_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1d612fc]" name="useragreement_link" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- useragreement_link -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@1d612fc]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=useragreement_link status=SKIP method=CreateNewAccount.useragreement_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@1d612fc] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- User_Agreement_Link -->
    <test name="Privacy_Policy_Link" duration-ms="14" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@ea9bc8]" name="fetchSuiteConfiguration" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1e63af2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@ea9bc8]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.privacypolicy_link()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="privacypolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@ea9bc8]" name="privacypolicy_link" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- privacypolicy_link -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@ea9bc8]" name="tearDown" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=privacypolicy_link status=SKIP method=CreateNewAccount.privacypolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@ea9bc8] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Privacy_Policy_Link -->
    <test name="Cookie_Policy_Link" duration-ms="14" started-at="2014-09-10T08:30:58Z" finished-at="2014-09-10T08:30:58Z">
      <class name="com.linkedin.cases.CreateNewAccount">
        <test-method status="PASS" signature="fetchSuiteConfiguration(org.testng.ITestContext)[pri:0, instance:com.linkedin.cases.CreateNewAccount@100124f]" name="fetchSuiteConfiguration" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@27ee05]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchSuiteConfiguration -->
        <test-method status="FAIL" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.linkedin.cases.CreateNewAccount@100124f]" name="setUp" is-config="true" duration-ms="0" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.linkedin.cases.CreateNewAccount.cookiepolicy_link()]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: desiredCapabilities=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: desiredCapabilities=null
	at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:33)
	at com.google.common.collect.ImmutableMap.entryOf(ImmutableMap.java:135)
	at com.google.common.collect.ImmutableMap$Builder.put(ImmutableMap.java:206)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:234)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:126)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at com.linkedin.init.SeleniumInit.setUp(SeleniumInit.java:304)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="cookiepolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@100124f]" name="cookiepolicy_link" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <reporter-output>
            <line>
              <![CDATA[<br> <b>Please look to the screenshot - </b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- cookiepolicy_link -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.linkedin.cases.CreateNewAccount@100124f]" name="tearDown" is-config="true" duration-ms="1" started-at="2014-09-10T14:00:58Z" finished-at="2014-09-10T14:00:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cookiepolicy_link status=SKIP method=CreateNewAccount.cookiepolicy_link()[pri:0, instance:com.linkedin.cases.CreateNewAccount@100124f] output=<br> <b>Please look to the screenshot - </b>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.linkedin.cases.CreateNewAccount -->
    </test> <!-- Cookie_Policy_Link -->
  </suite> <!-- suite -->
</testng-results>
